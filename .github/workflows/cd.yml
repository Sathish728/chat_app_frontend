name: Frontend CD

on:
  workflow_run:
    workflows: ["Frontend CI"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted
    timeout-minutes: 20
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Ensure Network Exists
        run: docker network create chat-app_default 2>/dev/null || true

      - name: Stop and Remove Old Frontend
        run: |
          docker stop chat-app_frontend_1 2>/dev/null || true
          docker rm -f chat-app_frontend_1 2>/dev/null || true
          docker rmi -f chat-app_frontend 2>/dev/null || true

      - name: Build Frontend with GitHub Secrets
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_STREAM_API_KEY: ${{ secrets.VITE_STREAM_API_KEY }}
        run: |
          cd /home/ubuntu/chat-app/frontend/_work/chat_app_frontend/chat_app_frontend
          docker build --no-cache \
            --build-arg VITE_API_URL="${VITE_API_URL}" \
            --build-arg VITE_STREAM_API_KEY="${VITE_STREAM_API_KEY}" \
            -t chat-app_frontend .

      - name: Ensure Backend Running
        run: |
          if ! docker ps | grep -q chat-app_backend_1; then
          docker start chat-app_backend_1 || true
          sleep 5
          fi

      - name: Deploy Frontend
        run: |
          docker run -d \
            --name chat-app_frontend_1 \
            --network chat-app_default \
            -p 3000:3000 \
            --restart unless-stopped \
            chat-app_frontend

      - name: Verify Deployment
        run: |
          sleep 15
          docker ps | grep frontend
          docker logs chat-app_frontend_1 --tail 100
